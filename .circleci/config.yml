version: 2.1

# This allows us to use CircleCI's dynamic configuration feature
setup: true

orbs:
  continuation: circleci/continuation@0.3.1

jobs:
  setup-genesis-allocs-validation:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - run:
          name: Install Git, yq, and jq
          command: |
            apk add --no-cache git jq curl
            curl -sLo /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
            chmod +x /usr/local/bin/yq
      - run:
          name: Verify Git
          command: git --version
      - run:
          name: Verify yq
          command: yq --version
      - run:
          name: Verify jq
          command: jq --version
      - run:
          name: Generate list of chainids and insert into  continue_config.yml file
          command: |
            sh validation/genesis/validation-inputs/generate-test-config.sh
      - continuation/continue:
          configuration_path: .circleci/continue_config.yml
          parameters: "{}"

  compute-config-diff-and-report-with-pr-comment:
    docker:
      - image: cimg/go:1.22
    parameters:
      command:
        description: "Command to run to generate config files"
        type: string
      directory:
        description: "Directory where config files are stored"
        type: string
      message:
        description: "PR comment body prefixed message"
        type: string
    steps:
      - checkout

      - run:
          name: Install Python and Poetry
          command: |
            sudo apt-get update
            sudo apt-get install -y python3 python3-pip
            python3 -m pip install --upgrade pip
            git clone --branch main --depth 1 https://github.com/ethereum-optimism/circleci-utils.git /tmp/circleci-utils
            GITHUB_CLI_PATH="/tmp/circleci-utils/github_utility/github_cli"
            pip install -r $GITHUB_CLI_PATH/requirements.txt
            COMMAND="python3 $GITHUB_CLI_PATH/main.py"
            echo "export COMMAND=$COMMAND" >> $BASH_ENV

      - run:
          name: Get circleci tools and set initial environment variables
          command: |
            PR_NUMBER=$(echo "$CIRCLE_PULL_REQUEST" | sed 's|.*/||')
            echo "export PR_NUMBER=$PR_NUMBER" >> $BASH_ENV
      - run:
          name: Generate configs at HEAD
          working_directory: validation
          command: |
            HEAD_SHA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls/$PR_NUMBER" | jq -r '.head.sha')

            # Checkout the HEAD SHA
            git fetch origin $HEAD_SHA
            git checkout $HEAD_SHA

            go run <<parameters.command>>/main.go HEAD
      - run:
          name: Generate configs on base branch
          working_directory: validation
          command: |
            # Fetch PR details using GitHub API
            BASE_BRANCH=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls/$PR_NUMBER" | jq -r '.base.ref')

            # Fetch the base branch
            git fetch origin $BASE_BRANCH

            # Checkout the base branch
            git checkout $BASE_BRANCH

            go run <<parameters.command>>/main.go base
      - run:
          name: Compute diff
          working_directory: validation
          command: |
            # Allow the script to continue even if the diff-configs.sh script returns a non-zero exit code
            set +e

            # Run the script and capture its output and exit code
            ./scripts/diff-configs.sh <<parameters.directory>>/output-base <<parameters.directory>>/output-HEAD
            DIFF=$?
            echo "export DIFF=$DIFF" >> $BASH_ENV

            # Restore error handling
            set -e
          when: always
      - run:
          name: Handle PR Comment Based on DIFF
          command: |
            REPO="${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"

            RUN_URL="${CIRCLE_BUILD_URL}"

            MESSAGE="<<parameters.message>>"
            COMMENT_BODY="$MESSAGE. You can see the detail [here]($RUN_URL)."
            echo $COMMAND
            COMMENT_ID=$( $COMMAND get-pr-comments \
              --github-token "${GITHUB_TOKEN}" \
              --repo "${REPO}" \
              --pr-number "${PR_NUMBER}" \
              --message-substring "${MESSAGE}" \
              --user-type "User" )

            COMMENT_ID=$(echo "$COMMENT_ID" | tr -d ' \n' | cut -d',' -f1)
            COMMENT_OPTION=""
            if [ -n "$COMMENT_ID" ]; then
              COMMENT_OPTION="--comment-id $COMMENT_ID"
            fi

            if [ "$DIFF" -eq 1 ]; then
                $COMMAND post-pr-comment \
                  --github-token "${GITHUB_TOKEN}" \
                  --repo "${REPO}" \
                  --pr-number "${PR_NUMBER}" \
                  --comment-body "${COMMENT_BODY}" \
                  $COMMENT_OPTION
            else
              if [ -n "$COMMENT_ID" ]; then
                $COMMAND delete-pr-comment \
                  --github-token "${GITHUB_TOKEN}" \
                  --repo "${REPO}" \
                  --pr-number "${PR_NUMBER}" \
                  --comment-id $COMMENT_ID
              fi
            fi
workflows:
  setup:
    jobs:
      - setup-genesis-allocs-validation
      - compute-config-diff-and-report-with-pr-comment:
          name: compute-genesis-diff
          command: "generate-genesis"
          directory: "generate-genesis"
          message: "Detected nonzero diff in genesis. This PR modifies the genesis data of at least one chain in the registry, which may or may not have been intended"
          context: circleci-superchain-registry
      - compute-config-diff-and-report-with-pr-comment:
          name: compute-rollup-config-diff
          command: "generate-rollup-config"
          directory: "generate-rollup-config"
          message: "Detected nonzero diff in rollup config. This PR modifies the configuration of at least one chain in the registry, which may or may not have been intended"
          context: circleci-superchain-registry
