version: 2.1

orbs:
  go: circleci/go@1.8.0

jobs:
  golang-lint-test:
    working_directory: ~/superchain-registry/superchain
    executor:
      name: go/default  # is based on cimg/go
      tag: '1.20'
    steps:
      - checkout:
          path: ~/superchain-registry
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - run: golangci-lint run -c=.golangci.yml
      - go/test:
          covermode: atomic
          failfast: true
          race: true
  golang-lint-test-validation:
    working_directory: ~/superchain-registry/validation
    executor:
      name: go/default  # is based on cimg/go
      tag: '1.20'
    steps:
      - checkout:
          path: ~/superchain-registry
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - run: golangci-lint run -c=.golangci.yml
      - go/test:
          covermode: atomic
          failfast: true
          race: true
  publish-bot:
    environment:
      NODE_AUTH_TOKEN: $NPM_TOKEN  # Use NPM_TOKEN as the auth token
    docker:
      - image: cimg/node:18  # Use Node.js 18
    working_directory: ~/superchain-registry/
    steps:
      - checkout:  # Checkout the code
          path: ~/superchain-registry
      - run:
          name: Set deployment token
          command: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
      - env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run:
          name: Build and publish package on NPM ðŸ“¦
          command: pnpm release
  check-codegen:
    docker:
      - image: cimg/node:18.18.2
    working_directory: ~/superchain-registry/
    steps:
      - checkout:
          path: ~/superchain-registry
      - run:
          name: Run codegen
          command: pnpm codegen
      - run:
          name: Check for changes
          command: git diff --exit-code
  check-forge-fmt:
    docker:
      - image: us-docker.pkg.dev/oplabs-tools-artifacts/images/ci-builder:v0.40.0
    steps:
      - checkout
      - run:
          name: check compliance with forge fmt
          command: |
            forge fmt --check
  check-security-configs:
    circleci_ip_ranges: true
    docker:
      - image: us-docker.pkg.dev/oplabs-tools-artifacts/images/ci-builder:v0.40.0
    steps:
      - checkout
      - run:
          name: check security configs
          command: |
            forge build
            # Note: If RPC is being rate-limited, consider reducing
            # --compute-units-per-second or using --fork-retries and
            # --fork-retry-backoff to stay under the limit.
            forge script CheckSecurityConfigs --fork-url="https://ci-mainnet-l1.optimism.io" --compute-units-per-second=320

workflows:
  main:
    jobs:
      - golang-lint-test
      - golang-lint-test-validation
      - check-codegen
      - check-forge-fmt
      - check-security-configs
