name: Rollup Config Diff

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  compute-rollup-config-diff:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Ensure the full history is fetched

    - name: Fetch all branches
      run: git fetch --all

    - name: Generate configs at HEAD
      working-directory: validation
      run: |
        go run generate-rollup-config/main.go HEAD

    - name: Generate configs on base branch
      working-directory: validation
      run: |
        # Get the base branch revision
        base_rev=${{ github.event.pull_request.base.sha }}
        echo "Base branch revision: $base_rev"
        git checkout $base_rev -- ../superchain
        go run generate-rollup-config/main.go base

    - name: compute diff
      working-directory: validation
      id: run_command
      run: |
        ./scripts/diff-configs.sh ./generate-rollup-config/output-base ./generate-rollup-config/output-HEAD
      continue-on-error: true

    - name: Check command status and comment on PR
      if: steps.run_command.outcome == 'failure'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const issue_number = context.payload.pull_request.number;
          const run_id = context.runId;
          const repo = context.repo.repo;
          const owner = context.repo.owner;
          const run_url = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;
          const body = `Detected nonzero diff in config. This PR modifies the effective configuration of at least one chain in the registry, which may or may not have been intended. It could affect whether a node started up with this config can successfully sync with the wider network. You can see the detail [here](${run_url}).`;

          // List all comments on the pull request
          const { data: comments } = await github.rest.issues.listComments({
            owner,
            repo,
            issue_number
          });

          // Find the comment made by the GitHub Action
          const comment = comments.find(comment => comment.user.type === 'Bot' && comment.body.includes('Detected nonzero diff in config.'));

          if (comment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner,
              repo,
              comment_id: comment.id,
              body
            });
          } else {
            // Create a new comment
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body
            });
          }
